{"version":3,"sources":["../src/usertours.js"],"names":["define","ajax","BootstrapTour","$","templates","str","log","notification","usertours","tourId","currentTour","context","init","startTour","fetchTour","addResetLink","on","e","preventDefault","resetTourState","M","util","js_pending","when","call","methodname","args","tourid","pageurl","window","location","href","render","then","response","template","tourconfig","name","steps","length","startBootstrapTour","always","js_complete","fail","exception","ele","html","js","appendNodeContents","tourConfig","onEnd","endTour","eventHandlers","afterEnd","markTourComplete","afterRender","markStepShown","tourName","map","step","element","target","reflex","moveOnClick","content","body","stepConfig","getStepConfig","getCurrentStepNumber","stepid","stepindex","error"],"mappings":"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","sourcesContent":["/**\n * User tour control library.\n *\n * @module     tool_usertours/usertours\n * @class      usertours\n * @package    tool_usertours\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\n */\ndefine(\n['core/ajax', 'tool_usertours/tour', 'jquery', 'core/templates', 'core/str', 'core/log', 'core/notification'],\nfunction(ajax, BootstrapTour, $, templates, str, log, notification) {\n    var usertours = {\n        tourId: null,\n\n        currentTour: null,\n\n        context: null,\n\n        /**\n         * Initialise the user tour for the current page.\n         *\n         * @method  init\n         * @param   {Number}    tourId      The ID of the tour to start.\n         * @param   {Bool}      startTour   Attempt to start the tour now.\n         * @param   {Number}    context     The context of the current page.\n         */\n        init: function(tourId, startTour, context) {\n            // Only one tour per page is allowed.\n            usertours.tourId = tourId;\n\n            usertours.context = context;\n\n            if (typeof startTour === 'undefined') {\n                startTour = true;\n            }\n\n            if (startTour) {\n                // Fetch the tour configuration.\n                usertours.fetchTour(tourId);\n            }\n\n            usertours.addResetLink();\n            // Watch for the reset link.\n            $('body').on('click', '[data-action=\"tool_usertours/resetpagetour\"]', function(e) {\n                e.preventDefault();\n                usertours.resetTourState(usertours.tourId);\n            });\n        },\n\n        /**\n         * Fetch the configuration specified tour, and start the tour when it has been fetched.\n         *\n         * @method  fetchTour\n         * @param   {Number}    tourId      The ID of the tour to start.\n         */\n        fetchTour: function(tourId) {\n            M.util.js_pending('admin_usertour_fetchTour' + tourId);\n            $.when(\n                ajax.call([\n                    {\n                        methodname: 'tool_usertours_fetch_and_start_tour',\n                        args: {\n                            tourid:     tourId,\n                            context:    usertours.context,\n                            pageurl:    window.location.href,\n                        }\n                    }\n                ])[0],\n                templates.render('tool_usertours/tourstep', {})\n            )\n            .then(function(response, template) {\n                if (response.tourconfig.name == '' && response.tourconfig.steps.length == 0) {\n                    // If tourconfig is empty, it shouldn't be displayed.\n                    return;\n                }\n\n                return usertours.startBootstrapTour(tourId, template[0], response.tourconfig);\n            })\n            .always(function() {\n                M.util.js_complete('admin_usertour_fetchTour' + tourId);\n\n                return;\n            })\n            .fail(notification.exception);\n        },\n\n        /**\n         * Add a reset link to the page.\n         *\n         * @method  addResetLink\n         */\n        addResetLink: function() {\n            var ele;\n            M.util.js_pending('admin_usertour_addResetLink');\n\n            // Append the link to the most suitable place on the page\n            // with fallback to legacy selectors and finally the body\n            // if there is no better place.\n            if ($('.tool_usertours-resettourcontainer').length) {\n                ele = $('.tool_usertours-resettourcontainer');\n            } else if ($('.logininfo').length) {\n                ele = $('.logininfo');\n            } else if ($('footer').length) {\n                ele = $('footer');\n            } else {\n                ele = $('body');\n            }\n            templates.render('tool_usertours/resettour', {})\n            .then(function(html, js) {\n                templates.appendNodeContents(ele, html, js);\n\n                return;\n            })\n            .always(function() {\n                M.util.js_complete('admin_usertour_addResetLink');\n\n                return;\n            })\n            .fail();\n        },\n\n        /**\n         * Start the specified tour.\n         *\n         * @method  startBootstrapTour\n         * @param   {Number}    tourId      The ID of the tour to start.\n         * @param   {String}    template    The template to use.\n         * @param   {Object}    tourConfig  The tour configuration.\n         * @return  {Object}\n         */\n        startBootstrapTour: function(tourId, template, tourConfig) {\n            if (usertours.currentTour) {\n                // End the current tour, but disable end tour handler.\n                tourConfig.onEnd = null;\n                usertours.currentTour.endTour();\n                delete usertours.currentTour;\n            }\n\n            // Normalize for the new library.\n            tourConfig.eventHandlers = {\n                afterEnd: [usertours.markTourComplete],\n                afterRender: [usertours.markStepShown],\n            };\n\n            // Sort out the tour name.\n            tourConfig.tourName = tourConfig.name;\n            delete tourConfig.name;\n\n            // Add the template to the configuration.\n            // This enables translations of the buttons.\n            tourConfig.template = template;\n\n            tourConfig.steps = tourConfig.steps.map(function(step) {\n                if (typeof step.element !== 'undefined') {\n                    step.target = step.element;\n                    delete step.element;\n                }\n\n                if (typeof step.reflex !== 'undefined') {\n                    step.moveOnClick = !!step.reflex;\n                    delete step.reflex;\n                }\n\n                if (typeof step.content !== 'undefined') {\n                    step.body = step.content;\n                    delete step.content;\n                }\n\n                return step;\n            });\n\n            usertours.currentTour = new BootstrapTour(tourConfig);\n            return usertours.currentTour.startTour();\n        },\n\n        /**\n         * Mark the specified step as being shownd by the user.\n         *\n         * @method  markStepShown\n         */\n        markStepShown: function() {\n            var stepConfig = this.getStepConfig(this.getCurrentStepNumber());\n            $.when(\n                ajax.call([\n                    {\n                        methodname: 'tool_usertours_step_shown',\n                        args: {\n                            tourid:     usertours.tourId,\n                            context:    usertours.context,\n                            pageurl:    window.location.href,\n                            stepid:     stepConfig.stepid,\n                            stepindex:  this.getCurrentStepNumber(),\n                        }\n                    }\n                ])[0]\n            ).fail(log.error);\n        },\n\n        /**\n         * Mark the specified tour as being completed by the user.\n         *\n         * @method  markTourComplete\n         */\n        markTourComplete: function() {\n            var stepConfig = this.getStepConfig(this.getCurrentStepNumber());\n            $.when(\n                ajax.call([\n                    {\n                        methodname: 'tool_usertours_complete_tour',\n                        args: {\n                            tourid:     usertours.tourId,\n                            context:    usertours.context,\n                            pageurl:    window.location.href,\n                            stepid:     stepConfig.stepid,\n                            stepindex:  this.getCurrentStepNumber(),\n                        }\n                    }\n                ])[0]\n            ).fail(log.error);\n        },\n\n        /**\n         * Reset the state, and restart the the tour on the current page.\n         *\n         * @method  resetTourState\n         * @param   {Number}    tourId      The ID of the tour to start.\n         */\n        resetTourState: function(tourId) {\n            $.when(\n                ajax.call([\n                    {\n                        methodname: 'tool_usertours_reset_tour',\n                        args: {\n                            tourid:     tourId,\n                            context:    usertours.context,\n                            pageurl:    window.location.href,\n                        }\n                    }\n                ])[0]\n            ).then(function(response) {\n                if (response.startTour) {\n                    usertours.fetchTour(response.startTour);\n                }\n                return;\n            }).fail(notification.exception);\n        }\n    };\n\n    return /** @alias module:tool_usertours/usertours */ {\n        /**\n         * Initialise the user tour for the current page.\n         *\n         * @method  init\n         * @param   {Number}    tourId      The ID of the tour to start.\n         * @param   {Bool}      startTour   Attempt to start the tour now.\n         */\n        init: usertours.init,\n\n        /**\n         * Reset the state, and restart the the tour on the current page.\n         *\n         * @method  resetTourState\n         * @param   {Number}    tourId      The ID of the tour to restart.\n         */\n        resetTourState: usertours.resetTourState\n    };\n});\n"],"file":"usertours.min.js"}