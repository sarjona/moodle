{"version":3,"sources":["../../../src/local/courseindex/keyboardnav.js"],"names":["parent","element","selectors","reactive","isEditing","_getVisibleItems","getVisibleItems","refreshVisibleItemsCache","treeRoot","on","registerEnterCallback","enterCallback","bind","item","isGroupItem","window","location","href","find","TOGGLER","first","attr","get","click","toggler","COLLAPSE","collapsibleId","data","replace","collapse","isGroupCollapsed","toggleGroup","togglers","SECTION","each","index","expandGroup","Tree"],"mappings":"0LA6BA,OACA,O,mtDASI,WAAYA,CAAZ,CAAoB,iBAEhB,cAAMA,CAAM,CAACC,OAAb,EAGA,EAAKC,SAAL,CAAiBF,CAAM,CAACE,SAAxB,CAIA,GAAIF,CAAM,CAACG,QAAP,CAAgBC,SAApB,CAA+B,CAC3B,EAAKC,gBAAL,CAAwB,EAAKC,eAA7B,CACA,EAAKA,eAAL,CAAuB,UAAM,CACzB,EAAKC,wBAAL,GACA,MAAO,GAAKF,gBAAL,EACV,CACJ,CAED,EAAKG,QAAL,CAAcC,EAAd,CAAiB,sCAAjB,CAAyD,UAAM,CAC3D,EAAKF,wBAAL,EACH,CAFD,EAIA,EAAKG,qBAAL,CAA2B,EAAKC,aAAL,CAAmBC,IAAnB,MAA3B,EArBgB,QAsBnB,C,uDAOaC,C,CAAM,CAChB,GAAI,KAAKC,WAAL,CAAiBD,CAAjB,CAAJ,CAA4B,CAExBE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuBJ,CAAI,CAACK,IAAL,CAAU,KAAKhB,SAAL,CAAeiB,OAAzB,EAAkCC,KAAlC,GAA0CC,IAA1C,CAA+C,MAA/C,CAAvB,CACAR,CAAI,CAACK,IAAL,CAAU,KAAKhB,SAAL,CAAeiB,OAAzB,EAAkCG,GAAlC,CAAsC,CAAtC,EAAyCC,KAAzC,EACH,CAJD,IAIO,CAEHR,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuBJ,CAAI,CAACK,IAAL,CAAU,GAAV,EAAeE,KAAf,GAAuBC,IAAvB,CAA4B,MAA5B,CAE1B,CACJ,C,0DAQgBR,C,CAAM,CACnB,GAAMW,CAAAA,CAAO,CAAGX,CAAI,CAACK,IAAL,mBAAhB,CACA,MAAyC,OAAlC,GAAAM,CAAO,CAACH,IAAR,CAAa,eAAb,CACV,C,gDAOWR,C,CAAM,OACRW,CAAO,CAAGX,CAAI,CAACK,IAAL,CAAU,KAAKhB,SAAL,CAAeuB,QAAzB,CADF,CAEVC,CAAa,WAAGF,CAAO,CAACG,IAAR,CAAa,QAAb,CAAH,gBAA6BH,CAAO,CAACH,IAAR,CAAa,MAAb,CAFhC,CAGd,GAAI,CAACK,CAAL,CAAoB,CAChB,MACH,CACDA,CAAa,CAAGA,CAAa,CAACE,OAAd,CAAsB,GAAtB,CAA2B,EAA3B,CAAhB,CAGA,yBAAMF,CAAN,GAAuBG,QAAvB,CAAgC,QAAhC,CACH,C,gDAOWhB,C,CAAM,CACd,GAAI,KAAKiB,gBAAL,CAAsBjB,CAAtB,CAAJ,CAAiC,CAC7B,KAAKkB,WAAL,CAAiBlB,CAAjB,CACH,CACJ,C,oDAOaA,C,CAAM,CAChB,GAAI,CAAC,KAAKiB,gBAAL,CAAsBjB,CAAtB,CAAL,CAAkC,CAC9B,KAAKkB,WAAL,CAAiBlB,CAAjB,CACH,CACJ,C,yDAOiB,YACRmB,CAAQ,CAAG,KAAKxB,QAAL,CAAcU,IAAd,CAAmB,KAAKhB,SAAL,CAAe+B,OAAlC,CADH,CAEdD,CAAQ,CAACE,IAAT,CAAc,SAACC,CAAD,CAAQtB,CAAR,CAAiB,CAC3B,CAAI,CAACuB,WAAL,CAAiB,cAAEvB,CAAF,CAAjB,CACH,CAFD,CAGH,C,cA5GwBwB,S","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index keyboard navigation and aria-tree compatibility.\n *\n * Node tree and bootstrap collapsibles don't use the same HTML structure. However,\n * all keybindings and logic is compatible. This class translate the primitive opetations\n * to a bootstrap collapsible structure.\n *\n * @module     core_courseformat/local/courseindex/keyboardnav\n * @class      core_courseformat/local/courseindex/keyboardnav\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// The core/tree uses jQuery to expand all nodes.\nimport $ from 'jquery';\nimport Tree from 'core/tree';\n\nexport default class extends Tree {\n\n    /**\n     * Setup the core/tree keyboard navigation.\n     *\n     * @param {CourseIndex} parent the parent component\n     */\n    constructor(parent) {\n        // Init this value with the parent DOM element.\n        super(parent.element);\n\n        // Get selectors from parent.\n        this.selectors = parent.selectors;\n\n        // The core/tree library saves the visible elements cache inside the main tree node.\n        // However, in edit mode content can change suddenly so we need to refresh caches when needed.\n        if (parent.reactive.isEditing) {\n            this._getVisibleItems = this.getVisibleItems;\n            this.getVisibleItems = () => {\n                this.refreshVisibleItemsCache();\n                return this._getVisibleItems();\n            };\n        }\n        // Add jQuery events to detect boostrap collapse and uncollapse.\n        this.treeRoot.on('hidden.bs.collapse shown.bs.collapse', () => {\n            this.refreshVisibleItemsCache();\n        });\n        // Register a custom callback for pressing enter key.\n        this.registerEnterCallback(this.enterCallback.bind(this));\n    }\n\n    /**\n     * Handle enter key on a collpasible node.\n     *\n     * @param {JQuery} item the jQuery object\n     */\n    enterCallback(item) {\n        if (this.isGroupItem(item)) {\n            // Group elements is like clicking a topic but without loosing the focus.\n            window.location.href = item.find(this.selectors.TOGGLER).first().attr('href');\n            item.find(this.selectors.TOGGLER).get(0).click();\n        } else {\n            // Activity links just follow the link href.\n            window.location.href = item.find('a').first().attr('href');\n            return;\n        }\n    }\n\n    /**\n     * Check if a gorup item is collapsed.\n     *\n     * @param {JQuery} item  the jQuery object\n     * @returns {boolean} if the element is collapsed\n     */\n    isGroupCollapsed(item) {\n        const toggler = item.find(`[aria-expanded]`);\n        return toggler.attr('aria-expanded') === 'false';\n    }\n\n    /**\n     * Toggle a group item.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    toggleGroup(item) {\n        const toggler = item.find(this.selectors.COLLAPSE);\n        let collapsibleId = toggler.data('target') ?? toggler.attr('href');\n        if (!collapsibleId) {\n            return;\n        }\n        collapsibleId = collapsibleId.replace('#', '');\n\n        // Bootstrap 4 uses jQuery to interact with collapsibles.\n        $(`#${collapsibleId}`).collapse('toggle');\n    }\n\n    /**\n     * Expand a group item.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    expandGroup(item) {\n        if (this.isGroupCollapsed(item)) {\n            this.toggleGroup(item);\n        }\n    }\n\n    /**\n     * Collpase a group item.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    collapseGroup(item) {\n        if (!this.isGroupCollapsed(item)) {\n            this.toggleGroup(item);\n        }\n    }\n\n    /**\n     * Expand all groups.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    expandAllGroups() {\n        const togglers = this.treeRoot.find(this.selectors.SECTION);\n        togglers.each((index, item) => {\n            this.expandGroup($(item));\n        });\n    }\n}\n"],"file":"keyboardnav.min.js"}